---
grails:
    profile: web
    codegen:
        defaultPackage: uspreadit
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    groovy:
        template:
            check-template-location: false

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
---
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false
        region.factory_class: 'org.hibernate.cache.ehcache.EhCacheRegionFactory'

endpoints:
    jmx:
        unique-names: true

dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.h2.Driver
    username: sa
    password:

environments:
    development:
        dataSource:
            dbCreate: create-drop
            url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    test:
        grails:
            gorm:
                failOnError: true
        dataSource:
            dbCreate: update
            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    production:
        #default grails
        #dataSource:
        #    dbCreate: update
        #    url: jdbc:h2:./prodDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
        #    properties:
        #        jmxEnabled: true
        #        initialSize: 5
        #        maxActive: 50
        #        minIdle: 5
        #        maxIdle: 25
        #        maxWait: 10000
        #        maxAge: 600000
        #        timeBetweenEvictionRunsMillis: 5000
        #        minEvictableIdleTimeMillis: 60000
        #        validationQuery: SELECT 1
        #        validationQueryTimeout: 3
        #        validationInterval: 15000
        #        testOnBorrow: true
        #        testWhileIdle: true
        #        testOnReturn: false
        #        jdbcInterceptors: ConnectionState
        #        defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
        dataSource:
            dbCreate: update
            dialect: org.hibernate.dialect.PostgreSQLDialect
            driverClassName: org.postgresql.Driver
            url: jdbc:postgresql://ec2-46-137-72-123.eu-west-1.compute.amazonaws.com:5432/d428sua6tv2t3c
            username: flhfdphnpvipkn
            password: RbAYHQ-Vb0YYlRnDfGF_asXpff

#Spring Security Core plugin config (https://grails-plugins.github.io/grails-spring-security-core/guide/single.html) :
grails:
    plugin:
        springsecurity:
            useBasicAuth: true
            basic:
                realmName: uSpreadIt
            userLookup:
                userDomainClassName: it.uspread.core.domain.User
                authorityJoinClassName: it.uspread.core.domain.UserRole
            authority:
                className: it.uspread.core.domain.Role
            securityConfigType: InterceptUrlMap
            interceptUrlMap:
                '/':                               permitAll
                '/index':                          permitAll
                '/index.gsp':                      permitAll
                '/assets/**':                      permitAll
                '/**/js/**':                       permitAll
                '/**/css/**':                      permitAll
                '/**/images/**':                   permitAll
                '/**/favicon.ico':                 permitAll
                '/login/**':                       permitAll
                '/logout/**':                      permitAll
                '/rest/signup':                    permitAll
                '/rest/users/moderator':           ROLE_MODERATOR
                '/rest/userlist':                  ROLE_MODERATOR
                '/rest/users/connected':           isAuthenticated()
                '/rest/users/connected/pushtoken': isAuthenticated()
                '/rest/users/connected/status':    isAuthenticated()
                '/rest/users/**':                  ROLE_MODERATOR
                '/rest/messages/reported':         ROLE_MODERATOR
                '/**':                             isAuthenticated()
            filterChain.chainMap:
                '/rest/**': 'JOINED_FILTERS'
                '/**':      'JOINED_FILTERS, -basicAuthenticationFilter, -basicExceptionTranslationFilter'
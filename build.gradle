buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate4:5.0.0"
        classpath "org.grails.plugins:views-gradle:1.0.0"
    }
}

version "0.8"
group "it.uspread"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"

    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:hibernate4"
    compile "org.hibernate:hibernate-ehcache"
    
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api:3.1.0"
    
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testCompile "com.github.groovy-wslite:groovy-wslite:0.7.2"

    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    runtime "org.hibernate:hibernate-validator:5.2.3.Final"
    compile 'org.grails.plugins:spring-security-core:3.0.3'
    
    // Push iOS et Android
    compile "com.notnoop.apns:apns:1.0.0.Beta4"
    compile "com.ganyo:gcm-server:1.0.2"
    
    // Utile pour la Prod Heroku uniquement
    runtime 'org.postgresql:postgresql:9.4-1201-jdbc4'
    
    // Utile en Dev/Test uniquement
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    provided "com.h2database:h2"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

// Heroku a besoin d'une tache stage
task stage() {
    dependsOn clean, war
}
tasks.stage.doLast() {
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/assetCompile")
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/libs", exclude: "*.war")
}
war.mustRunAfter clean
